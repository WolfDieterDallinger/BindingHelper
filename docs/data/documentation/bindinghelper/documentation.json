{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This modul enables:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The prefix operator ! for "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The operator ?? for "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"."}]}]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As of July 2022 DocC does not handle extensions to external symbols so "},{"type":"codeVoice","code":"!"},{"type":"text","text":" and "},{"type":"codeVoice","code":"??"},{"type":"text","text":" are not properly included in this documentation, but you can access the documentation using quick help (right click on symbol > show quick help)."}]}]},{"anchor":"Operator-!","level":3,"type":"heading","text":"Operator !"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" with the negated wrapped "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct MyView: View {","    @State private var isOn = false","","    var body: some View {","        Toggle(\"isOn\", $isOn)","        Toggle(\"isOff\", !$isOn)","    }","}"]},{"anchor":"Operator-??","level":3,"type":"heading","text":"Operator ??"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" with the nil-coalesced wrapped value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The nil-coalescing is bidirectional. If you assign the default value to the wrapped value the wrapped value of the original "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" becomes nil."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this operator e. g. for a "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" from an managed object property with an optional type like "},{"type":"codeVoice","code":"String?"},{"type":"text","text":" from "},{"type":"codeVoice","code":"CoreData"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct MyView: View {","    \/\/ Item is a managed object from CoreData with an property named text of type String?","    @ObservedObject var item: Item","   ","    var body: some View {","        TextField(\"Enter text\", $item.text ?? \"\")","    }","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/bindinghelper\/documentation"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BindingHelper\/documentation\/BindingHelper\/Documentation","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A Swift package with a Swift modul to add functionality tp "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"."}],"kind":"article","metadata":{"roleHeading":"Article","title":"BindingHelper","role":"article","modules":[{"name":"BindingHelper"}]},"hierarchy":{"paths":[["doc:\/\/BindingHelper\/documentation\/BindingHelper"]]},"references":{"doc://BindingHelper/documentation/BindingHelper":{"role":"collection","title":"BindingHelper","abstract":[],"identifier":"doc:\/\/BindingHelper\/documentation\/BindingHelper","kind":"symbol","type":"topic","url":"\/documentation\/bindinghelper"}}}